<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd 
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop.xsd"> 
        	
	<!-- （处理器映射器【非注解】）处理器映射器
	将bean的name作为url进行查找，需要在配置handler时指定benaname（就是url）
	所有的处理器映射器都实现HandlerMapping接口
	 -->
	<bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"></bean>
    <!-- （处理器映射器【非注解】）简单url映射 -->   
    <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
    	<property name="mappings">
    		<props>
    			<!-- 对id为itemsController1的bean进行url映射 -->
    			<prop key="/queryItems1.action">itemsController1</prop>
    			<prop key="/queryItems2.action">itemsController1</prop>
    			
    			<prop key="/queryItems3.action">itemsController2</prop>
    		</props>
    	</property>
    </bean>
     	
	<!-- (处理器适配器【非注解】)处理器适配器
	所有的处理器适配器都实现HandlerAdapter接口
	 -->
	<bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"></bean>
	<!-- (处理器适配器【非注解】)另一个处理器适配器 
	实现HttpRequestHandler接口
	-->
	<bean class="org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter"></bean>
        	
	<!-- 视图解析器 
	解析jsp，默认使用jstl标签，classpath下需要有jstl包
	-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 配置以下前缀和后缀后，视图路径可缩短  如："/WEB-INF/jsp/items/itemlist.jsp"可写为"items/itemlist"
		<property name="prefix" value="/WEB-INF/jsp/"></property>
		<property name="suffix" value=".jsp"></property>-->
	</bean>

	<!-- （处理器映射器【注解】）处理器映射器 
		3.1之后使用如下映射器（不配置将使用默认的，不正确）
	-->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"></bean>
	<!-- （处理器适配器【注解】）处理器适配器 
		3.1之后使用如下适配器 （不配置将使用默认的，不正确）
	-->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"></bean>

	<!-- 可以使用mvc:annotation-driven代替上边的注解 处理器映射器和处理器适配器
	mvc:annotation-driven默认加载很多的参数绑定方法
	比如json转换解析器默认加载了，如果使用mvc:annotation-driven不用配置上边的RequestMappingHandlerMapping和RequestMappingHandlerAdapter
	实际开发中使用mvc:annotation-driven
	-->
	<!-- <mvc:annotation-driven></mvc:annotation-driven> -->



	<!-- 配置处理器 -->
	<bean id="itemsController1" name="/queryItems.action" class="cn.com.rf.ssm.controller.ItemsController1"></bean>
	<!-- 配置另一个处理器 -->
	<bean id="itemsController2" class="cn.com.rf.ssm.controller.ItemsController2"></bean>
	<!-- 配置注解的处理器（可以单个配置）
	实际开发中建议使用组件扫描
	 -->
	<!-- <bean class="cn.com.rf.ssm.controller.annotation.ItemsController3"></bean> -->
	<!-- 可以扫描controller、service。。。
	这里让扫描controller，制定controller的包，使用扫描可以将上边的非扫描注释掉
	 -->
	<context:component-scan base-package="cn.com.rf.ssm.controller.annotation"></context:component-scan> 
</beans>